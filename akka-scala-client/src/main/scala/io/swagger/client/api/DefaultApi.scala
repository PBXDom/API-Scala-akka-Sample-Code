/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Inline_response_200
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DefaultApi {

  /**
   * Gets &#x60;Calls&#x60; info. 
   * 
   * Expected answers:
   *   code 200 : Seq[Inline_response_200] (Successful response)
   * 
   * @param rptType Report type. (0 report, 1 widget, 2 chart).
   * @param rptId Report id.
   * @param start Start offset.
   * @param limit Number of results to return. Max 10K.
   * @param sortBy Sort column.
   * @param sortType Sort mode asc/desc.
   * @param fromDate Start date time.
   * @param toDate End date time.
   * @param duration Duration range.
   * @param phone List of caller phone.
   * @param phone1 List of dialled phones.
   * @param co List of trunk/co.
   * @param ext list of extensions.
   * @param pbxId list of PBX Ids.
   * @param callSource list of callsource.
   * @param callType list of call type signatures.(5 Unanswered Calls, 7 Transfered Calls, 8 Forwarded Calls)
   * @param direction list of direction.(0 incoming, 1 outgoing, 2 internal)
   * @param callerName list of caller name.
   * @param did list of did.
   * @param dnis list of dnis.
   * @param acc list of account code.
   * @param ring Ring range.Seconds unit.
   * @param cost Cost range.
   * @param group Department/Group id.
   */
  def callsGet(rptType: Double, rptId: Double, start: Option[Double] = None, limit: Option[Double] = None, sortBy: Option[String] = None, sortType: Option[String] = None, fromDate: Option[String] = None, toDate: Option[String] = None, duration: Option[Double] = None, phone: Option[String] = None, phone1: Option[String] = None, co: Option[String] = None, ext: Option[String] = None, pbxId: Option[Double] = None, callSource: Option[Double] = None, callType: Option[Double] = None, direction: Option[Double] = None, callerName: Option[String] = None, did: Option[String] = None, dnis: Option[String] = None, acc: Option[String] = None, ring: Option[Double] = None, cost: Option[Double] = None, group: Option[Double] = None): ApiRequest[Seq[Inline_response_200]] =
    ApiRequest[Seq[Inline_response_200]](ApiMethods.GET, "https://api.pbxdom.com", "/Calls", "application/json")
      .withQueryParam("rptType", rptType)
      .withQueryParam("rptId", rptId)
      .withQueryParam("start", start)
      .withQueryParam("limit", limit)
      .withQueryParam("sortBy", sortBy)
      .withQueryParam("sortType", sortType)
      .withQueryParam("fromDate", fromDate)
      .withQueryParam("toDate", toDate)
      .withQueryParam("duration", duration)
      .withQueryParam("phone", phone)
      .withQueryParam("phone1", phone1)
      .withQueryParam("co", co)
      .withQueryParam("ext", ext)
      .withQueryParam("pbxId", pbxId)
      .withQueryParam("callSource", callSource)
      .withQueryParam("callType", callType)
      .withQueryParam("direction", direction)
      .withQueryParam("callerName", callerName)
      .withQueryParam("did", did)
      .withQueryParam("dnis", dnis)
      .withQueryParam("acc", acc)
      .withQueryParam("ring", ring)
      .withQueryParam("cost", cost)
      .withQueryParam("group", group)
      .withSuccessResponse[Seq[Inline_response_200]](200)
        /**
   * Gets &#x60;Charts&#x60; list. 
   * 
   * Expected answers:
   *   code 200 : Seq[Inline_response_200] (Successful response)
   */
  def featuresChartsGet(): ApiRequest[Seq[Inline_response_200]] =
    ApiRequest[Seq[Inline_response_200]](ApiMethods.GET, "https://api.pbxdom.com", "/Features/charts", "application/json")
      .withSuccessResponse[Seq[Inline_response_200]](200)
        /**
   * Gets &#x60;Reports&#x60; list. 
   * 
   * Expected answers:
   *   code 200 : Seq[Inline_response_200] (Successful response)
   */
  def featuresReportsGet(): ApiRequest[Seq[Inline_response_200]] =
    ApiRequest[Seq[Inline_response_200]](ApiMethods.GET, "https://api.pbxdom.com", "/Features/reports", "application/json")
      .withSuccessResponse[Seq[Inline_response_200]](200)
        /**
   * Gets &#x60;Widgets&#x60; list. 
   * 
   * Expected answers:
   *   code 200 : Seq[Inline_response_200] (Successful response)
   */
  def featuresWidgetGet(): ApiRequest[Seq[Inline_response_200]] =
    ApiRequest[Seq[Inline_response_200]](ApiMethods.GET, "https://api.pbxdom.com", "/Features/widget", "application/json")
      .withSuccessResponse[Seq[Inline_response_200]](200)
      

}

